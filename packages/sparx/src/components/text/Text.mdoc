# Text

`Text` is the primary long-form typography component. By default, `Text` renders at 18px with Encode
Sans, in a high-contrast color for the theme's primary background.

{% showcase %}

```
<Text variant="text-lg/normal">This is a large Text element</Text>
<Text variant="text-md/normal">This is a medium Text element. The default.</Text>
<Text variant="text-sm/normal">
  This is a small Text element. Good for notes and hint text.
</Text>
<Text variant="text-xs/normal">
  This is an extra-small Text element. These are rarely used outside of minor notes.
</Text>
```

{% /showcase %}

`Text` can also use the style variants that `Header` normally uses to achieve the same styles
without the semantic implications of a header tag. This is good for hierarchical combinations of
text, like a field name and a field value appearing next to each other, to indicate the distinction
between the two.

{% showcase %}

```
<div>
  <Text variant="header-sm/normal">First name</Text>
  <Text>Melanija</Text>
</div>
<div>
  <Text variant="header-sm/normal">Last name</Text>
  <Text>Zion</Text>
</div>
<div>
  <Text variant="header-sm/normal">Birthday</Text>
  <Text>February 18, 1987</Text>
</div>
```

{% /showcase %}

Each font and size variation also has a number of color options, denoted in the variant name as
`name/color`. `normal` and `secondary` are the most common colors across all instances of text, but
the additional status colors can also be used to draw attention to a state in a way that is more
subtle than a `Card` or `Callout` might be.

{% showcase %}

```
<Text variant="text-md/normal">This text uses the <code>normal</code> color.</Text>
<Text variant="text-md/secondary">This uses the <code>secondary</code> color.</Text>
<Text variant="text-md/success">This is a successful status message.</Text>
<Text variant="text-md/info">This is some information text.</Text>
<Text variant="text-md/warning">The text might be risky using this warning color.</Text>
<Text variant="text-md/danger">This text indicates dangerous actions.</Text>
```

{% /showcase %}

In some cases, the desired color for a `Text` element isn't known ahead of time, or is dependent on
a parent component, like inside of a `Hero` block. In these cases, an `inherit` option is alo
available for all variants to have the component inherit it's color from whatever is currently set
by the context.
