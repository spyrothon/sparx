# TextInput

`TextInput` is the simplest text input, great for receiving short-form text from a user, such as a
username, password, email address, or any other single-sentence content. TextInput also handles
numeric inputs with the `type` prop.

{% showcase %}

```
<Stack>
  <TextInput placeholder="Enter some text" />
  <TextInput type="password" placeholder="Password" />
  <TextInput type="number" defaultValue={0.0} />
  <TextInput type="email" defaultValue="someone@example.com" />
  <TextInput type="datetime-local" defaultValue="4155550000" />
</Stack>
```

{% /showcase %}

`TextInput` is distinguished from other content using a thin border and a highlighted interior.

{% callout type="warning" %}

While `TextInput` provides a `placeholder` prop for showing some hint text, placeholders _should
not_ use them for labeling the name of the input.

Instead, use the `label` and `description` props to provide context for the intent of the input.
Placeholders are meant for showing example input only and should generally be avoided where not
necessary.

{% /callout %}

## Status

Informational states about a `TextInput` can use the `status` prop, which adjusts the color of the
input to match a semantic meaning. On its own, this works well for indicating that the input needs
some special attention, but does not convey any reason for why. For that, use the `errorMessage`
prop to provide a short explanation of how the user can address the status of the input.

{% showcase %}

```
<Stack>
  <TextInput status="default" placeholder="Default state" />
  <TextInput status="success" placeholder="Success state" />
  <TextInput status="warning" placeholder="Warning state" />
  <TextInput status="danger" placeholder="Danger state" />
  <TextInput status="info" placeholder="Info state" />
  <Spacer />
  <TextInput label="Username" status="danger" errorMessage="Cannot be blank"  />
</Stack>
```

{% /showcase %}

Sizes can also be adjusted to fit different contexts.

{% showcase %}

```
<Stack>
  <TextInput size="small" placeholder="Small input" />
  <TextInput size="medium" placeholder="Medium input" />
  <TextInput size="large" placeholder="Large input" />
  <TextInput size="xlarge" placeholder="Xlarge input" />
</Stack>
```

{% /showcase %}

## Blank

For specific use cases, there's also a `blank` state, which removes all of the color accenting from
the input and just shows the light highlight on the input area background. Especially for larger
inputs, this can be useful for avoiding too much color or appearing overly-segmented.

{% showcase %}

```
<TextInput status="blank" defaultValue="This has no borders" />
```

{% /showcase %}
